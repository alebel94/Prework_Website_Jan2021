
/*I know a lot of these are called containers. I was trying
to use flex box but it wasn't going so well. Main issues were aligning 
elements in the middle compared to each other, the footer to stay in place,
and picking sizes such as px and vw units to adjust the webpage. I 
will be doing another one with grid or bootstrap as this one didn't turn 
out as how I expected */

body{
    background-color:#ebffff;
    font-family: century;
}

#container-header{
    background-color: rgb(0, 0, 0);
    color: rgb(255, 255, 255);
    border: 1px solid white;
    padding: 20px;
    position: absolute; top: 1vw; left: 2vw; right: 2vw;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    flex-flow: wrap;
    justify-content: space-between;
}

.container-middle-section{
    border: 4px solid red;
    background-color: white;
    padding-left: 15px;
    padding-right: 15px;
    width: 73vw;
    position: absolute; top: 8vw; left: 2vw;
    height: auto;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    flex-flow: wrap;
    justify-content: center;
    align-items: center
}

.container-middle-section p{
    border: 4px solid red;
    max-width: 80%; 
    text-align: justify;
    text-justify: inter-word;
}
.container-aside{
    background-color: white;
    padding-left: 15px;
    border: 1px solid black;
    height: 50vw;
    width: 15vw;
    display: inline-block;
    position: absolute; top: 8vw; right: 2vw; bottom: 8vw;
    justify-content: right;
    align-content: space-evenly;
}

.container-aside #me-image{
    margin: 20px;
}

.container-aside #container-interesing-list{
    padding: 2px;
    border: 1px solid black;
    margin: 20px;
    display: block;
    justify-content: center;
    align-content: space-evenly;
}

.container-footer{
    background-color: black;
    color: white;
    border: 1px solid white;
    padding: 10px;
    width: 92vw;
    position: absolute; top: 90vw; left: 2vw;
}

